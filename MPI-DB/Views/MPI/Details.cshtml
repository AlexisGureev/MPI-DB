@model Mpi

@{
    //Layout = null;
    ICollection<T2Geolunits> lsGeolunits = new List<T2Geolunits>();
    ICollection<T3Rock> lsRock = new List<T3Rock>();
    ICollection<T4OreBody> lsOreBody = new List<T4OreBody>();
    ICollection<T5Mineral> lsMineral = new List<T5Mineral>();
    ICollection<T6Reser> lsReser = new List<T6Reser>();
    List<Kadastr> lsISND = new List<Kadastr>();


    ViewData["Title"] = "Details";
    Deposit1810 dep = Model.Deposit1810.FirstOrDefault();
    if (dep != null)
    {
        lsGeolunits = Model.D.T2Geolunits;
        lsRock = Model.D.T3Rock;
        lsOreBody = Model.D.T4OreBody;
        lsMineral = Model.D.T5Mineral;
        lsReser = Model.D.T6Reser;
        if (dep.Isnd != null)
        {
            lsISND.Add(dep.Isnd);
        }
    }
    Dictionary<string, string> flds = ViewBag.fld;
}

<h2>@Model.DnRu</h2>

<div>
    <h4>@Model.SdnRu</h4>
    <hr />
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id">Редактировать</a> |
        @*    <a asp-action="Index">Back to List</a>*@
    </div>
    <div class="row">
        <div class="col-5 col-sm-6 ">
            <dl class="row">
                <dt class="col-md-5">Type</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.TypeNavigation.ValEn)</dd>
                <dt class="col-md-5">Class</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.ClssNavigation.ValEn)</dd>

                <dt class="col-md-5">Название (en)</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.DnEng)</dd>
                <dt class="col-md-5">Псевдоним (en)</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.SdnEng)</dd>

                <dt class="col-md-5">Размер</dt>
                <dd class="col-md-7">@Model.DsNavigation?.Code - @Model?.DsNavigation?.LegRu</dd>
                <dt class="col-md-5">Ген. тип</dt>
                <dd class="col-md-7">@Model.GtNavigation?.Code - @Model.GtNavigation?.LegRu</dd>
                <dt class="col-md-5">Группа полезных ископаемых </dt>
                <dd class="col-md-7">@Model.MgNavigation?.Code - @Model.MgNavigation?.LegRu</dd>
                <dt class="col-md-5">Главные полезные ископаемые</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.Mm)</dd>
                <dt class="col-md-5">Сопутствующие полезные ископаемые</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.Am)</dd>
                <dt class="col-md-5">Геолого-промышленный тип</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.Ct)</dd>

                <dt class="col-md-5">Возраст</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.Age)</dd>
                <dt class="col-md-5">Возростная группа</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.AgeGroup)</dd>
                <dt class="col-md-5">Возраст тектонический</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.AgeTect)</dd>

                <dt class="col-md-5">Качество руд</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.OqNavigation.Code)</dd>

                <dt class="col-md-5">@Html.DisplayNameFor(model => model.Comment)</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.Comment)</dd>
                <dt class="col-md-5">@Html.DisplayNameFor(model => model.Comments)</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.Comments)</dd>

                <dt class="col-md-5">@Html.DisplayNameFor(model => model.RegCountry)</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.RegCountry)</dd>
                <dt class="col-md-5">@Html.DisplayNameFor(model => model.Admin)</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.Admin)</dd>





                <dt class="col-md-5">@Html.DisplayNameFor(model => model.SrcMark)</dt>
                <dd class="col-md-7">@Html.DisplayFor(model => model.SrcMark)</dd>

                <dt class="col-md-5">РГФ</dt>
                <dd class="col-md-7"><a href="https://www.rfgf.ru/gkm/itemview.php?id=@Model.RgfId">@Model.RgfId</a></dd>
            </dl>
            <h3>Отображается на картах: </h3>
            @Model.ShowOnText
            <ul>
                
                @foreach (JsonProperty pr in Model.ShowOn.RootElement.EnumerateObject())
                {
                    <li>@pr.Name : @pr.Value</li> 
            }
                </ul>
            </div>
        <div class="col">
            <div id="map"></div>
        </div>
    </div>
    
</div>

<div>
    @(Html.Grid(Model.Deposit1810).Build(columns =>
                                                                {
                                                                    columns.Add(m => m.NameMest).Titled("Название");
                                                                    columns.Add(m => m.MainId).Titled("гл. ПИ");
                                                                    columns.Add(m => m.MinId).Titled("вт. ПИ");
                                                                    columns.Add(m => m.RazDep).Titled("Размер");
                                                                    columns.Add(m => m.GpType).Titled("Название");
                                                                    columns.Add(m => m.GrI).Titled("гр. ПИ 1");
                                                                    columns.Add(m => m.GrIi).Titled("гр. ПИ 2");
                                                                    columns.Add(m => m.Geotyp1).Titled("Geotyp1");
                                                                    columns.Add(m => m.Geotyp2).Titled("Geotyp2");
                                                                    columns.Add(m => m.RudForm1).Titled("Rud Form1");
                                                                    columns.Add(m => m.RudForm2).Titled("Rud Form2");
                                                                    columns.Add(m => m.GodDoc).Titled("God Doc");
                                                                    columns.Add(m => m.RgfPass).Titled("Паспорт РГФ");
                                                                })
    )
    <h5>Вмещающие геологические стpуктуpы</h5>
    @(Html.Grid(lsGeolunits).Build(cols =>
                                                                {
                                                                    cols.Add(m => m.Texture);
                                                                }).Empty("Нет данных")
    )
    <h5>Вмещающие породы, Возраст</h5>
    @Html.Grid(lsRock).Build(cols =>
{
    cols.Add(m => m.Rocks);
    cols.Add(m => m.RockPosit);
    cols.Add(m => m.AgeRock1);
    cols.Add(m => m.AgeRock2);
    cols.Add(m => m.NotesRud);
    cols.Add(m => m.GenType);
}).Empty("Нет данных")
    <h5>Минеральный состав руд</h5>
    @Html.Grid(lsMineral.OrderByDescending(o => o.MinZnach)).Build(cols =>
{
    cols.Add(m => m.Mineral);
    cols.Add(m => m.MinZnach);
    cols.Add(m => m.NotesMine);
}).Empty("Нет данных")
    <h5>Запасы полезных ископаемых ГБЗ</h5>
    @Html.Grid(lsReser).Build(cols =>
{
    cols.Add(m => m.MainComp).Titled("MainComp");
    cols.Add(m => m.RazmerM).Titled("RazmerM");
    cols.Add(m => m.RazmerD).Titled("RazmerD");
    cols.Add(m => m.VidBalanc).Titled("VidBalanc");
    cols.Add(m => m.Comp).Titled("Comp");
    cols.Add(m => m.EdR).Titled("EdR");
    cols.Add(m => m.EdComp).Titled("EdComp");
    cols.Add(m => m.Xcomp).Titled("Xcomp");
    cols.Add(m => m.EdX).Titled("EdX");
    cols.Add(m => m.Abc1rud).Titled("Abc1rud");
    cols.Add(m => m.Abc1comp).Titled("Abc1comp");
    cols.Add(m => m.C2rud).Titled("C2rud");
    cols.Add(m => m.C2comp).Titled("C2comp");
    cols.Add(m => m.ZabalRud).Titled("ZabalRud");
    cols.Add(m => m.ZabalComp).Titled("ZabalComp");
    cols.Add(m => m.VidBal).Titled("VidBal");
}).Empty("Нет данных")

    @if (Model.Rgf?.Isnd != null)
    {
        <h3>ИС НЕДРА</h3>
        @Html.Grid(lsISND).Build(cols =>
   {
       cols.Add(m => m.NameMest).Titled("Название");
       cols.Add(m => m.SynonMest);
       cols.Add(m => m.GkmState);
       cols.Add(m => m.MassgkmNtgf);
       cols.Add(m => m.GodOpen).Titled("God Open");
       cols.Add(m => m.GodDoc).Titled("God Doc");
       cols.Add(m => m.MassgkmNrgf).Titled("Паспорт РГФ");
   })

        @Html.Grid(Model.Rgf.Isnd.KdGeolage).Build(cols =>
   {
       cols.Add(m => m.GeolageFrom.FullAge).Titled("От");
       cols.Add(m => m.GeolageTo.FullAge).Titled("До");
   })
        if (Model.Rgf.Isnd.KdText != null)
        {
            @Model.Rgf.Isnd.KdText.TAbsAge
            <h4>kd_text</h4>
            <dl>
                @foreach (var p in Model.Rgf.Isnd.KdText.GetType().GetProperties())
                {
                    var val = p.GetValue(Model.Rgf.Isnd.KdText) as String;
                    if (!String.IsNullOrWhiteSpace(val))
                    {
                        <dt>
                            @if (flds.ContainsKey(p.Name.ToLower()))
                            {
                                @flds[p.Name.ToLower()]
                            }
                            else
                            {
                                @p.Name
                            }
                        </dt>
                        <dd>@val</dd>
                    }
                }
            </dl>

        }
    }


</div>


@section Scripts {
<script>
    var x =@Model.Geom.X.ToString(NumberFormatInfo.InvariantInfo);
    var y=@Model.Geom.Y.ToString(NumberFormatInfo.InvariantInfo);
    var pos = [y, x];

    var OSMLayer= L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    });
  //  var YaMapLayer=L.tileLayer(
  //'http://vec{s}.maps.yandex.net/tiles?l=map&v=4.55.2&z={z}&x={x}&y={y}&scale=2&lang=ru_RU', {
  //  subdomains: ['01', '02', '03', '04'],
  //  attribution: '<a http="yandex.ru" target="_blank">Яндекс</a>',
  //  reuseTiles: true,
  //  updateWhenIdle: false
  //}
  //  );
  //  var YaSatLayer=L.tileLayer(
  //'http://vec{s}.maps.yandex.net/tiles?l=sat&v=4.55.2&z={z}&x={x}&y={y}&scale=2&lang=ru_RU', {
  //  subdomains: ['01', '02', '03', '04'],
  //  attribution: '<a http="yandex.ru" target="_blank">Яндекс</a>',
  //  reuseTiles: true,
  //  updateWhenIdle: false
  //}
    //);
    var mapLink = '<a href="http://www.esri.com/">Esri</a>';
    var wholink = 'i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community';
    var esriLayer = L.tileLayer(
        'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
        attribution: '&copy; ' + mapLink + ', ' + wholink
    });

    var geol_vsegei = L.tileLayer.wms("http://wms.vsegei.ru/VSEGEI_Bedrock_geology/wms?", {
    layers: "RUSSIA_VSEGEI_1M_BLS",
    transparent: true,
    format: "image/png"
    
    });

    var map = L.map('map', { layers: [ OSMLayer, esriLayer,geol_vsegei] }).setView(pos, 10);
    var baseMaps = {
        "OSM": OSMLayer,
       // "Y Карта": YaMapLayer,
       // "Y Спутник": YaSatLayer,
        "ESRI Image": esriLayer,
        "geol vsegei":geol_vsegei
    };
    L.control.layers(baseMaps).addTo(map);

     L.marker(pos).addTo(map).bindPopup('@Model.DnRu').openPopup();


   
   
   // var wms_raster = new OpenLayers.Layer.WMS(
			//"RUSSUA Bedrock Geology RASTER","http://wms.vsegei.ru/VSEGEI_Bedrock_geology/wms?",
			////"RUSSUA Bedrock Geology RASTER","http://wms.vsegei.ru/bedrock/wms?",
   //             {
   //                 layers: "RUSSIA_VSEGEI_1M_BLS",
   //                 transparent: "true",
   //                 format: "image/png"
			//		,projection: "EPSG:3857", 'reproject': true
   //             }
   //         );
			
   //         var wms_strat = new OpenLayers.Layer.WMS(
			//"Points","http://wms.vsegei.ru/test/wms?",
			////"RUSSUA Bedrock Geology RASTER","http://wms.vsegei.ru/bedrock/wms?",
   //             {
   //                 layers: "STRAT",
   //                 transparent: "true", format: "image/png"
			//		,projection: "EPSG:3857", 'reproject': true
   //             }
   //         );			

   //         var wms_AG_2500 = new OpenLayers.Layer.WMS(
			//"RUSSUA GK2500","http://172.30.10.29:6080/arcgis/services/GGK2500/GGK2500_2013_PI/MapServer/WMSServer",
   //             {
   //                 layers: "1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,46,47",
   //                 transparent: "true", format: "image/png"
			//		,projection: "EPSG:3857", 'reproject': true
   //             }
   //         );
			
   //         var wms_polta = new OpenLayers.Layer.WMS(
   //             "RUSSUA borders","http://wms.vsegei.ru/VSEGEI_topo/wms?",
   //             {
   //                 layers: "POLTA",
   //                 transparent: "true", format: "image/png"
			//		,projection: "EPSG:3857", 'reproject': true
   //             }
   //         );
			
   //         var wms_gk2500 = new OpenLayers.Layer.WMS(
   //             "RUSSUA Bedrock geology Vector","http://wms.vsegei.ru/VSEGEI_bedrock_2500/wms?",
   //             {
   //                 layers: "gk2500",
   //                 transparent: "true", format: "image/png"
			//		,projection: "EPSG:3857", 'reproject': true
   //             }
   //         );			

			//var wms_mbr = new OpenLayers.Layer.WMS(
   //             "GGK1000/2 Lists","http://wms.vsegei.ru/VSEGEI_topo/wms?",
   //             {
   //                 layers: "MBR1000",
   //                 transparent: "true", format: "image/png"
			//		,projection: "EPSG:3857", 'reproject': true
   //             }
   //         );	

			//var wms_basea = new OpenLayers.Layer.WMS(
   //             "BASEA","http://wfs.vsegei.ru/wfs/wfs?",
   //             {
   //                 layers: "basea",
   //                 transparent: "true", format: "image/png"
			//		,projection: "EPSG:3857", 'reproject': true
   //             }
   //         );			

			//var wms_basea_s = new OpenLayers.Layer.WMS(
   //             "BASEA seamless","http://wfs.vsegei.ru/wfs/wfs?",
   //             {
   //                 layers: "basea_Seamless",
   //                 transparent: "true", format: "image/png"
			//		,projection: "EPSG:3857", 'reproject': true
   //             }
   //         );				

			//var wms_zaramka = new OpenLayers.Layer.WMS(
   //             "zaramka","http://wms.vsegei.ru/test/wms?",
   //             {
   //                 layers: "zaramka_1G",
   //                 transparent: "true", format: "image/png",'reproject': true
   //             }
   //         );	




</script>

}
